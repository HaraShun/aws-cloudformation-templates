AWSTemplateFormatVersion: 2010-09-09
Description: AWSCloudFormationTemplates/static-web-hosting/autoscaling creates Auto Scaling Group and Network Load Balancer.

Parameters:
  AutoScalingDesiredCapacity:
    Type: Number
    Default: 1
    MinValue: 0
  AutoScalingMaxSize:
    Type: Number
    Default: 1
    MinValue: 0
  EC2IamInstanceProfileARN:
    Type: String
  EC2ImageId:
    Type: AWS::EC2::Image::Id
    Default: ami-068a6cefc24c301d2
  EC2InstanceType:
    Type: String
    Default: t3.micro
  EC2KeyName:
    Type: String
    Default: ''
  EC2SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
  EC2VolumeSize:
    Type: Number
    Default: 8
    MinValue: 8
  EipAllocationId1ForNLB:     
    Type: String 
  EipAllocationId2ForNLB:     
    Type: String 
  PrefixOfLogicalName:
    Type: String
    Default: WebServers
  SubnetId1ForNLB:
    Type: String
  SubnetId2ForNLB:
    Type: String
  SNSTopicARN:
    Type: String
  VPCId:
    Type: String
  TagKey:
    Type: String
    Default: createdby
  TagValue:
    Type: String
    Default: aws:cloudformation:stack

Conditions:
  KeyExists:
    !Not [ !Equals [ !Ref EC2KeyName, '' ] ]

Resources:
  # Service-linked Role
  ServiceLinkedRoleForAutoScaling:
    Type: AWS::IAM::ServiceLinkedRole
    DeletionPolicy: Retain
    Properties: 
      AWSServiceName: autoscaling.amazonaws.com
      Description: Default Service-Linked Role enables access to AWS Services and Resources used or managed by Auto Scaling
  # NLB
  NetworkLoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: !Sub nlb-${PrefixOfLogicalName}
      Scheme: internet-facing
      SubnetMappings:
        - SubnetId: !Ref SubnetId1ForNLB
          AllocationId: !Ref EipAllocationId1ForNLB
        - SubnetId: !Ref SubnetId2ForNLB
          AllocationId: !Ref EipAllocationId2ForNLB
      Tags:
        - Key: Name
          Value: !Sub nlb-${PrefixOfLogicalName}-${AWS::Region}
        - Key: !Ref TagKey
          Value: !Ref TagValue
      Type: network
  NetworkLoadBalancerTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      Name: !Sub target-${PrefixOfLogicalName}
      Port: 80
      Protocol: TCP
      Tags:
        - Key: Name
          Value: !Sub target-${PrefixOfLogicalName}-${AWS::Region}
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TargetType: instance
      UnhealthyThresholdCount: 3
      VpcId: !Ref VPCId
  NetworkLoadBalancerListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties: 
      DefaultActions:
        - TargetGroupArn: !Ref NetworkLoadBalancerTargetGroup
          Type: forward
      LoadBalancerArn: !Ref NetworkLoadBalancer
      Port: 80
      Protocol: TCP
  # Auto Scaling Group
  AutoScalingLaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties: 
      AssociatePublicIpAddress: false
      BlockDeviceMappings: 
        - DeviceName: /dev/xvda
          Ebs: 
            DeleteOnTermination: true
            VolumeSize: !Ref EC2VolumeSize
            VolumeType: gp2
      EbsOptimized: true
      IamInstanceProfile: !Ref EC2IamInstanceProfileARN
      ImageId: !Ref EC2ImageId
      InstanceMonitoring: true
      InstanceType: !Ref EC2InstanceType
      KeyName: !If
        - KeyExists
        - !Ref EC2KeyName
        - !Ref AWS::NoValue
      LaunchConfigurationName: !Sub autoscalinglaunchconfiguration-${PrefixOfLogicalName}
      SecurityGroups: 
        - !Ref EC2SecurityGroupId
  AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties: 
      AutoScalingGroupName: !Sub autoscalinggroup-${PrefixOfLogicalName}
      Cooldown: '300'
      DesiredCapacity: !Ref AutoScalingDesiredCapacity
      HealthCheckGracePeriod: 300
      HealthCheckType: EC2
      LaunchConfigurationName: !Ref AutoScalingLaunchConfiguration
      MaxSize: !Ref AutoScalingMaxSize
      MetricsCollection: 
        - Granularity: 1Minute
          Metrics:
            - GroupMinSize
            - GroupMaxSize
            - GroupDesiredCapacity
            - GroupInServiceInstances
            - GroupPendingInstances
            - GroupStandbyInstances
            - GroupTerminatingInstances
            - GroupTotalInstances
      MinSize: '1'
      NotificationConfigurations: 
        - NotificationTypes: 
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
            - autoscaling:EC2_INSTANCE_TERMINATE
            - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
            - autoscaling:TEST_NOTIFICATION
          TopicARN: !Ref SNSTopicARN
      ServiceLinkedRoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling
      Tags:
        - Key: !Ref TagKey
          PropagateAtLaunch: true
          Value: !Ref TagValue
      TargetGroupARNs:
        - !Join
          - ''
          - - !Sub 'arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:'
            - !GetAtt NetworkLoadBalancerTargetGroup.TargetGroupFullName
      TerminationPolicies: 
        - Default
      VPCZoneIdentifier: 
        - !Ref SubnetId1ForNLB
        - !Ref SubnetId2ForNLB